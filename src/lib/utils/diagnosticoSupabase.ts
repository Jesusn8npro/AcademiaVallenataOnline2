import { supabase } from '$lib/supabase/clienteSupabase';

// üîç DIAGN√ìSTICO COMPLETO DE CONFIGURACI√ìN DE SUPABASE
export async function diagnosticarConfiguracionSupabase() {
  console.log('üîç [DIAGN√ìSTICO] Iniciando verificaci√≥n de Supabase...');
  
  const diagnostico = {
    url: '',
    configuracion: {},
    conectividad: false,
    authConfig: {},
    errores: [] as string[],
    recomendaciones: [] as string[]
  };

  try {
    // 1Ô∏è‚É£ VERIFICAR URL Y CONFIGURACI√ìN B√ÅSICA
    diagnostico.url = supabase.supabaseUrl;
    diagnostico.configuracion = {
      url: supabase.supabaseUrl,
      key: supabase.supabaseKey ? 'Configurada ‚úÖ' : 'No configurada ‚ùå',
      origin: window.location.origin,
      hostname: window.location.hostname
    };

    console.log('üîç [DIAGN√ìSTICO] URL Supabase:', diagnostico.url);
    console.log('üîç [DIAGN√ìSTICO] Origin:', window.location.origin);

    // 2Ô∏è‚É£ VERIFICAR CONECTIVIDAD CON SUPABASE
    try {
      const { data, error } = await supabase.auth.getSession();
      if (!error) {
        diagnostico.conectividad = true;
        console.log('‚úÖ [DIAGN√ìSTICO] Conectividad con Supabase: OK');
      } else {
        diagnostico.errores.push(`Conectividad: ${error.message}`);
        console.error('‚ùå [DIAGN√ìSTICO] Error de conectividad:', error);
      }
    } catch (err) {
      diagnostico.errores.push(`Conectividad excepci√≥n: ${err}`);
      console.error('‚ùå [DIAGN√ìSTICO] Excepci√≥n de conectividad:', err);
    }

    // 3Ô∏è‚É£ VERIFICAR CONFIGURACI√ìN DE AUTH (sin getConfig que no existe)
    try {
      // Verificar que el cliente de auth est√© inicializado correctamente
      const session = await supabase.auth.getSession();
      diagnostico.authConfig = {
        clienteAuth: 'Inicializado ‚úÖ',
        sesionValida: session?.data?.session ? 'Activa ‚úÖ' : 'No activa ‚ÑπÔ∏è',
        urlActual: window.location.href,
        esLocalhost: window.location.hostname === 'localhost' ? 'S√≠ ‚ö†Ô∏è' : 'No ‚úÖ'
      };
      console.log('üîç [DIAGN√ìSTICO] Configuraci√≥n Auth:', diagnostico.authConfig);
    } catch (err) {
      diagnostico.errores.push(`Configuraci√≥n Auth: ${err}`);
    }

          // 4Ô∏è‚É£ VERIFICAR CONFIGURACI√ìN DE EMAIL (DETECCI√ìN ESPEC√çFICA)
      try {
        console.log('üîç [DIAGN√ìSTICO] Probando configuraci√≥n de email...');
        
        // Intentar con un email de prueba para detectar el tipo de error
        const { error: emailError } = await supabase.auth.resetPasswordForEmail('test@nonexistent-domain-12345.com', {
          redirectTo: window.location.origin + '/recuperar-contrasena'
        });

        if (emailError) {
          console.log('üîç [DIAGN√ìSTICO] Error de email detectado:', emailError);
          
          if (emailError.message.includes('rate') || emailError.message.includes('limit')) {
            diagnostico.recomendaciones.push('‚úÖ Servicio de email funcional (rate limit detectado - normal)');
          } else if (emailError.message.includes('not authorized') || emailError.message.includes('email_address_not_authorized')) {
            diagnostico.errores.push('üö® PROBLEMA PRINCIPAL: Usando servicio de email predeterminado de Supabase');
            diagnostico.recomendaciones.push('');
            diagnostico.recomendaciones.push('‚ùå CAUSA DEL ERROR: El servicio de email por defecto de Supabase');
            diagnostico.recomendaciones.push('   SOLO env√≠a emails a miembros de tu organizaci√≥n de Supabase.');
            diagnostico.recomendaciones.push('   Por eso emails externos no llegan pero aparecen como "enviados".');
            diagnostico.recomendaciones.push('');
            diagnostico.recomendaciones.push('‚úÖ SOLUCI√ìN OBLIGATORIA: Configurar proveedor SMTP personalizado');
            diagnostico.recomendaciones.push('   1. Ve a Supabase Dashboard > Authentication > Settings');
            diagnostico.recomendaciones.push('   2. Scroll hasta "SMTP Settings"');
            diagnostico.recomendaciones.push('   3. Configura uno de estos proveedores:');
            diagnostico.recomendaciones.push('      ‚Ä¢ Gmail SMTP (gratis, 500 emails/d√≠a)');
            diagnostico.recomendaciones.push('      ‚Ä¢ Resend (gratis, 3000 emails/mes)');
            diagnostico.recomendaciones.push('      ‚Ä¢ SendGrid (gratis, 100 emails/d√≠a)');
            diagnostico.recomendaciones.push('      ‚Ä¢ Mailgun, Amazon SES, etc.');
          } else if (emailError.message.includes('invalid') || emailError.message.includes('disabled')) {
            diagnostico.errores.push('‚ùå Servicio de email deshabilitado o mal configurado');
            diagnostico.recomendaciones.push('üîß Habilita email confirmations en Supabase Dashboard');
          } else {
            diagnostico.errores.push(`Error de email: ${emailError.message}`);
            if (emailError.message.includes('AuthRetryableFetchError')) {
              diagnostico.recomendaciones.push('‚ö†Ô∏è Error de conectividad - revisa tu conexi√≥n a internet');
            }
          }
        } else {
          diagnostico.recomendaciones.push('‚úÖ Servicio de email configurado correctamente');
        }
      } catch (emailErr) {
        const error = emailErr as any;
        diagnostico.errores.push(`Error de email: ${error.message || emailErr}`);
        if (error.message?.includes('AuthRetryableFetchError')) {
          diagnostico.recomendaciones.push('‚ö†Ô∏è AuthRetryableFetchError - problema de conectividad');
        }
      }

    // 5Ô∏è‚É£ VERIFICAR POL√çTICAS RLS
    try {
      const { data: perfiles, error: perfilesError } = await supabase
        .from('perfiles')
        .select('count')
        .limit(1);

      if (!perfilesError) {
        diagnostico.recomendaciones.push('‚úÖ Acceso a tabla perfiles: OK');
      } else {
        diagnostico.errores.push(`Pol√≠ticas RLS: ${perfilesError.message}`);
        diagnostico.recomendaciones.push('üîß Verifica las pol√≠ticas RLS en la tabla perfiles');
      }
    } catch (rlsErr) {
      diagnostico.errores.push(`RLS test excepci√≥n: ${rlsErr}`);
    }

    // 6Ô∏è‚É£ GENERAR RECOMENDACIONES ESPEC√çFICAS PARA DESARROLLO LOCAL
    if (window.location.hostname === 'localhost') {
      diagnostico.recomendaciones.push('‚ö†Ô∏è DETECTADO DESARROLLO LOCAL - Problemas comunes con resetPasswordForEmail:');
      diagnostico.recomendaciones.push('');
      diagnostico.recomendaciones.push('üîß SOLUCIONES INMEDIATAS:');
      diagnostico.recomendaciones.push('1. En Supabase Dashboard > Authentication > Settings > General:');
      diagnostico.recomendaciones.push('   ‚úÖ Site URL: http://localhost:5173');
      diagnostico.recomendaciones.push('   ‚úÖ Redirect URLs: http://localhost:5173/**, http://localhost:5173/recuperar-contrasena');
      diagnostico.recomendaciones.push('');
      diagnostico.recomendaciones.push('2. En Authentication > Settings > Email Templates:');
      diagnostico.recomendaciones.push('   ‚úÖ Habilita "Enable email confirmations"');
      diagnostico.recomendaciones.push('   ‚úÖ Configura plantillas de email personalizadas');
      diagnostico.recomendaciones.push('');
      diagnostico.recomendaciones.push('3. Configuraci√≥n de SMTP (REQUERIDO para desarrollo):');
      diagnostico.recomendaciones.push('   ‚ö†Ô∏è El servicio de email por defecto NO funciona bien en localhost');
      diagnostico.recomendaciones.push('   ‚úÖ Configura un proveedor SMTP (Gmail, SendGrid, Resend, etc.)');
      diagnostico.recomendaciones.push('');
      diagnostico.recomendaciones.push('4. ALTERNATIVA TEMPORAL - Usar IP local:');
      diagnostico.recomendaciones.push('   üí° Usa http://127.0.0.1:5173 en lugar de localhost:5173');
      diagnostico.recomendaciones.push('   üí° O usa http://192.168.x.x:5173 (tu IP local)');
      
      if (diagnostico.errores.some(e => e.includes('AuthRetryableFetchError'))) {
        diagnostico.recomendaciones.push('');
        diagnostico.recomendaciones.push('üö® ERROR AuthRetryableFetchError detectado:');
        diagnostico.recomendaciones.push('   ‚ùå Este error es MUY com√∫n en localhost');
        diagnostico.recomendaciones.push('   ‚úÖ Funciona perfectamente en producci√≥n');
        diagnostico.recomendaciones.push('   üí° Para testear: deploy temporal o usa ngrok/cloudflare tunnel');
      }
    } else {
      if (diagnostico.errores.length === 0) {
        diagnostico.recomendaciones.push('üéâ Configuraci√≥n de Supabase parece correcta');
      } else {
        diagnostico.recomendaciones.push('üîß Acciones recomendadas para producci√≥n:');
        diagnostico.recomendaciones.push('1. Verifica las variables de entorno VITE_SUPABASE_URL y VITE_SUPABASE_ANON_KEY');
        diagnostico.recomendaciones.push('2. En Supabase Dashboard > Authentication > Settings:');
        diagnostico.recomendaciones.push('   - Habilita "Enable email confirmations"');
        diagnostico.recomendaciones.push('   - Configura "Site URL" con tu dominio');
        diagnostico.recomendaciones.push('   - Verifica "Redirect URLs" incluye tu dominio/recuperar-contrasena');
        diagnostico.recomendaciones.push('3. Verifica que el proveedor de email est√© configurado (SMTP o servicio)');
      }
    }

  } catch (error) {
    diagnostico.errores.push(`Error general: ${error}`);
    console.error('‚ùå [DIAGN√ìSTICO] Error general:', error);
  }

  // 7Ô∏è‚É£ MOSTRAR RESUMEN
  console.log('üìä [DIAGN√ìSTICO] RESUMEN:', diagnostico);
  
  return diagnostico;
}

// üõ†Ô∏è FUNCI√ìN PARA PROBAR RECUPERACI√ìN DE CONTRASE√ëA
export async function probarRecuperacionContrasena(email: string) {
  console.log('üß™ [PRUEBA] Probando recuperaci√≥n para:', email);
  
  const isProduction = window.location.hostname === 'academiavallenataonline.com';
  const isLocalhost = window.location.hostname === 'localhost';
  const redirectURL = isProduction 
    ? 'https://academiavallenataonline.com/recuperar-contrasena'
    : window.location.origin + '/recuperar-contrasena';

  console.log('üîó [PRUEBA] Redirect URL configurada:', redirectURL);

  try {
    const { error } = await supabase.auth.resetPasswordForEmail(email, {
      redirectTo: redirectURL
    });

    if (error) {
      console.error('‚ùå [PRUEBA] Error completo:', error);
      
      // Analizar tipo espec√≠fico de error
      if (error.message?.includes('AuthRetryableFetchError') || error.name === 'AuthRetryableFetchError') {
        return {
          exito: false,
          error: 'AuthRetryableFetchError - Error t√≠pico de desarrollo local',
          codigoError: error.status || 'N/A',
          recomendacion: isLocalhost 
            ? 'üîß SOLUCI√ìN: Este error es normal en localhost. Para solucionarlo:\n1. Configura SMTP personalizado en Supabase\n2. Agrega localhost:5173 a las URLs permitidas\n3. O prueba en producci√≥n donde funciona perfectamente'
            : 'Problema de conectividad con Supabase Auth. Verifica tu configuraci√≥n de red.'
        };
      }
      
      if (error.message?.includes('rate') || error.message?.includes('limit')) {
        return {
          exito: false,
          error: 'Rate limit excedido',
          codigoError: error.status || 429,
          recomendacion: 'Espera unos minutos antes de intentar nuevamente'
        };
      }

      if (error.message?.includes('not authorized') || error.message?.includes('invalid') || error.message?.includes('email_address_not_authorized')) {
        return {
          exito: false,
          error: 'üö® PROBLEMA PRINCIPAL: Servicio de email predeterminado de Supabase',
          codigoError: error.status || 'EMAIL_NOT_AUTHORIZED',
          recomendacion: '‚ùå CAUSA: Supabase por defecto SOLO env√≠a emails a miembros de tu organizaci√≥n.\n\n' +
                        '‚úÖ SOLUCI√ìN OBLIGATORIA: Configurar proveedor SMTP personalizado:\n' +
                        '   1. Supabase Dashboard > Authentication > Settings > SMTP Settings\n' +
                        '   2. Enable custom SMTP ‚úÖ\n' +
                        '   3. Configura Gmail, Resend, SendGrid, etc.\n' +
                        '   4. Gu√≠a completa: src/lib/utils/configuracionSMTP.md\n\n' +
                        'üìß PROVEEDORES RECOMENDADOS:\n' +
                        '   ‚Ä¢ Gmail SMTP (gratis, 500 emails/d√≠a)\n' +
                        '   ‚Ä¢ Resend (gratis, 3000 emails/mes) ‚≠ê\n' +
                        '   ‚Ä¢ SendGrid (gratis, 100 emails/d√≠a)'
        };
      }

      return {
        exito: false,
        error: error.message || 'Error desconocido',
        codigoError: error.status || 'N/A',
        recomendacion: 'Verifica la configuraci√≥n de Supabase Auth y conectividad'
      };
    } else {
      console.log('‚úÖ [PRUEBA] Email enviado exitosamente');
      return {
        exito: true,
        mensaje: 'Email de recuperaci√≥n enviado correctamente',
        redirectURL,
        nota: isLocalhost ? 'Revisa la configuraci√≥n de SMTP si no recibes el email' : undefined
      };
    }
  } catch (err) {
    console.error('‚ùå [PRUEBA] Excepci√≥n completa:', err);
    
    // Capturar espec√≠ficamente AuthRetryableFetchError
    const error = err as any; // Convertir para acceder a propiedades
    if (error.name === 'AuthRetryableFetchError' || error.message?.includes('AuthRetryableFetchError')) {
      return {
        exito: false,
        error: 'AuthRetryableFetchError (Error de desarrollo local)',
        codigoError: 'NETWORK_ERROR',
        recomendacion: isLocalhost
          ? 'üö® ERROR COM√öN EN LOCALHOST:\n‚Ä¢ Este error NO ocurre en producci√≥n\n‚Ä¢ Es un problema conocido de Supabase con localhost\n‚Ä¢ SOLUCI√ìN: Despliega en producci√≥n para probar realmente'
          : 'Error de conectividad de red. Verifica tu conexi√≥n a internet.'
      };
    }

    return {
      exito: false,
      error: `Excepci√≥n inesperada: ${error.message || String(err)}`,
      codigoError: 'EXCEPTION',
      recomendacion: 'Error inesperado. Verifica consola del navegador para m√°s detalles.'
    };
  }
} 